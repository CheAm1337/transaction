version: '3.1'

services:

  frontend-service:
    build:
      context: ./services/frontend-service
    ports:
      - "8080:8080"
    networks:
      - mynetwork
    depends_on:
      - api-service


  validation-service:
    build:
      context: ./services/validation-service
    ports:
      - "8005:8005"
    networks:
      - mynetwork
    environment:
      KAFKA_BROKER: kafka:9093

  logging-service:
    build:
      context: ./services/logging-service
    ports:
      - "8006:8006"
    networks:
      - mynetwork
    environment:
      KAFKA_BROKER: kafka:9093

  api-service:
    build:
      context: ./services/api-service
    ports:
      - "8003:8003"
    networks:
      - mynetwork
    depends_on:
      - validation-service
      - auth-service
      - transaction-service
    environment:
      KAFKA_BROKER: kafka:9093

  auth-service:
    build:
      context: ./services/auth-service
    ports:
      - "8001:8001"
    networks:
      - mynetwork
    environment:
      KAFKA_BROKER: kafka:9093  
    depends_on:
      - kafka
      - zookeeper
      - postgres_db
      - redis

  transaction-service:
    build: 
      context: ./services/transaction-service
    ports:
      - "8002:8002"
    networks:
      - mynetwork
    environment:
      KAFKA_BROKER: kafka:9093  
    depends_on:
      - kafka
      - zookeeper
      - postgres_db
      - redis

  currencies-service:
    build: 
      context: ./services/currencies-service
    ports:
      - "8004:8004"
    networks:
      - mynetwork
    environment:
      KAFKA_BROKER: kafka:9093  

  postgres_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: main_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    networks:
      - mynetwork
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d

  redis:
    image: redis:latest
    ports:
      - "6380:6379"
    networks:
      - mynetwork

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092" 
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093  
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME_INSIDE_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME_INNER: INSIDE
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - ./kafka-config:/opt/kafka/config
    networks:
      - mynetwork

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
